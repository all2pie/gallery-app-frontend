[{"/home/haris/Freelance/Gallery-Task/frontend/src/App.tsx":"1","/home/haris/Freelance/Gallery-Task/frontend/src/index.tsx":"2","/home/haris/Freelance/Gallery-Task/frontend/src/components/header/Header.tsx":"3","/home/haris/Freelance/Gallery-Task/frontend/src/pages/Images/Images.tsx":"4","/home/haris/Freelance/Gallery-Task/frontend/src/common/client.ts":"5","/home/haris/Freelance/Gallery-Task/frontend/src/pages/Image-Form/Image-From.tsx":"6"},{"size":551,"mtime":1612121843952,"results":"7","hashOfConfig":"8"},{"size":146,"mtime":1612118808404,"results":"9","hashOfConfig":"8"},{"size":714,"mtime":1612119764616,"results":"10","hashOfConfig":"8"},{"size":1892,"mtime":1612122074944,"results":"11","hashOfConfig":"8"},{"size":107,"mtime":1612121748858,"results":"12","hashOfConfig":"8"},{"size":2587,"mtime":1612121844168,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"db45du",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},"/home/haris/Freelance/Gallery-Task/frontend/src/App.tsx",["28"],"/home/haris/Freelance/Gallery-Task/frontend/src/index.tsx",[],["29","30"],"/home/haris/Freelance/Gallery-Task/frontend/src/components/header/Header.tsx",[],"/home/haris/Freelance/Gallery-Task/frontend/src/pages/Images/Images.tsx",[],"/home/haris/Freelance/Gallery-Task/frontend/src/common/client.ts",[],"/home/haris/Freelance/Gallery-Task/frontend/src/pages/Image-Form/Image-From.tsx",["31"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport './Image-From.scss';\nimport { client } from '../../common/client';\nimport { Button } from '@material-ui/core';\n\nexport class ImageFrom extends React.Component<any> {\n  state = {\n    title: '',\n    description: '',\n    email: '',\n    url: '',\n    file: null,\n  };\n\n  handleFieldChange = (\n    name: string,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  imageChange = (files: any[]) => {\n    this.setState({ file: files[0] });\n  };\n\n  handelSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.append('image', this.state.file as any);\n      const { data: image } = await client.post('uploadImage', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n        },\n      });\n\n      await this.setState({ url: image });\n\n      console.log('this.state', this.state);\n      const { data } = await client.post('image', this.state);\n      this.props.history.push('/');\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  isButtonDisabled = () => {\n    return !(\n      this.state.file &&\n      this.state.title &&\n      this.state.description &&\n      this.state.email &&\n      this.state.file\n    );\n  };\n\n  render() {\n    return (\n      <form className='form' onSubmit={this.handelSubmit}>\n        <TextField\n          label='Title'\n          value={this.state.title}\n          onChange={this.handleFieldChange.bind(this, 'title')}\n          type='text'\n          required\n          className='form-field'\n        />\n\n        <TextField\n          label='Email'\n          value={this.state.email}\n          onChange={this.handleFieldChange.bind(this, 'email')}\n          type='email'\n          required\n          className='form-field'\n        />\n\n        <TextField\n          label='Description'\n          value={this.state.description}\n          onChange={this.handleFieldChange.bind(this, 'description')}\n          required\n          className='form-field'\n        />\n\n        <DropzoneArea\n          dropzoneClass='image-select'\n          onChange={this.imageChange}\n          acceptedFiles={['image/jpeg', 'image/png', 'image/jpg']}\n          filesLimit={1}\n        />\n\n        <Button\n          type='submit'\n          className='form-field'\n          color='primary'\n          variant='contained'\n          disabled={this.isButtonDisabled()}\n        >\n          Save\n        </Button>\n      </form>\n    );\n  }\n}\n",{"ruleId":"32","severity":1,"message":"33","line":2,"column":50,"nodeType":"34","messageId":"35","endLine":2,"endColumn":54},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"32","severity":1,"message":"40","line":43,"column":15,"nodeType":"34","messageId":"35","endLine":43,"endColumn":19},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["41"],"no-negated-in-lhs",["42"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]